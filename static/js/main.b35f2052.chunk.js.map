{"version":3,"sources":["assets/logo.svg","assets/sign-in-background.png","assets/sign-up-background.png","styles/global.ts","services/api.ts","hooks/auth.tsx","routes/Route/index.tsx","components/Button/styles.tsx","components/Button/index.tsx","components/Tooltip/styled.tsx","components/Tooltip/index.tsx","components/Input/styles.tsx","components/Input/index.tsx","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/styles.ts","components/ToastContainer/index.tsx","hooks/toast.tsx","utils/getValidationErrors.ts","pages/SignIn/styles.tsx","pages/SignIn/index.tsx","pages/SignUp/styles.tsx","pages/SignUp/index.tsx","pages/Dashboard/index.tsx","routes/index.tsx","hooks/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","api","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","Provider","value","useAuth","context","useContext","Error","Route","isPrivate","Component","component","rest","render","to","pathname","Container","styled","button","shade","Button","div","Tooltip","title","className","props","isErrored","css","isFocused","isFilled","Input","name","Icon","icon","inputRef","useRef","setIsFocused","setIsFilled","useField","defaultValue","error","fieldName","registerField","handleInputFocus","handleInputBlur","current","useEffect","ref","path","size","onFocus","onBlur","color","toastTypeVariation","info","success","animated","type","hasDescription","icons","Toast","message","style","removeToast","useToast","timer","setTimeout","id","clearTimeout","description","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","v4","state","filter","getValidationErrors","err","ValidationErrors","inner","forEach","Content","appearFromLeft","keyframes","AnimatedContainer","Background","SignInBackgroundImg","SignIn","formRef","history","useHistory","HandleSubmit","setErrors","schema","Yup","shape","required","min","validate","abortEarly","push","errors","src","LogoImg","alt","onSubmit","FiMail","placeholder","FiLock","href","SignUpBackground","SignUp","handleSubmit","FiUser","Dashboard","Routes","exact","Hooks","App","basename","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b35f2052.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a49b07ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background.6eac314f.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-up-background.c4d8f988.png\";","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        box-sizing: border-box;\n        padding: 0;\n        outline: 0;\n    }\n\n    body {\n        background-color: #312E38;\n        color: #fff;\n        -webkit-font-smoothing: antialiased;\n    }\n\n    body, input, button {\n        font-family: 'Roboto Slab', serif;\n        font-size: 16px;\n    }\n\n    h1, h2, h3, h4, h5, h6, strong {\n        font-weight: 500;\n    }\n\n    button {\n        cursor: pointer;\n    }\n`;","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n\nexport default api;\n","import React, { createContext, useCallback, useContext, useState } from 'react';\n\nimport api from '../services/api';\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface AuthContextData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:Token');\n    const user = localStorage.getItem('@GoBarber:User');\n\n    if (token && user) return { token, user: JSON.parse(user) };\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', { email, password });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@GoBarber:Token', token);\n    localStorage.setItem('@GoBarber:User', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:Token');\n    localStorage.removeItem('@GoBarber:User');\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\n\n  return context;\n}\n\nexport { useAuth, AuthProvider };\n","import React from 'react';\nimport {\n  RouteProps as ReactRouterDOMProps,\n  Route as RouterDOM,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../../hooks/auth';\n\ninterface RouterProps extends ReactRouterDOMProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouterProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <RouterDOM\n      {...rest}\n      render={() => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect to={{ pathname: isPrivate ? '/' : '/dashboard' }} />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import styled from 'styled-components'\nimport { shade } from 'polished'\n\nexport const Container = styled.button`\n    background: #FF9000;\n    border-radius: 10px;\n    padding: 0 16px;\n    height: 56px;\n    border: 0;\n    width: 100%;\n    margin-top: 16px;\n    color: #312e38;\n    font-weight: 500;\n    transition: background-color 0.2s;\n\n    &:hover {\n        background: ${shade(0.2, '#FF9000')};\n    } \n`","import React,{ ButtonHTMLAttributes } from 'react'\n\nimport { Container } from './styles'\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>\n   \nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\n    \n    <Container  {...rest}>{children}</Container>\n    \n)\n\nexport default Button","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    visibility: hidden;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    color: #312e38;\n\n    &::before {\n      content: '';\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0 6px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styled';\n\ninterface TooltipProps {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ title, children, className }) => {\n  return (\n    <Container className={className}>\n      {children}\n      <span>{title}</span>\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from 'styled-components';\n\nimport Tooltip from '../Tooltip';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n  isErrored: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #232129;\n  border-radius: 10px;\n  padding: 16px;\n  width: 100%;\n\n  border: 2px solid #232129;\n  color: #666360;\n\n  ${props =>\n    props.isErrored &&\n    css`\n      border-color: #c53030;\n    `}\n\n  ${props =>\n    props.isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `}\n\n  ${props =>\n    props.isFilled &&\n    css`\n      color: #ff9000;\n    `}\n\n    input {\n    flex: 1;\n    color: #f4ede8;\n    background: #232129;\n    border: 0;\n\n    &::placeholder {\n      color: #666360;\n    }\n\n    & + input {\n      margin-top: 8px;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n\n  & + div {\n    margin-top: 8px;\n  }\n`;\n\nexport const Error = styled(Tooltip)`\n  height: 20px;\n  margin-left: 16px;\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { defaultValue, error, fieldName, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFocused={isFocused} isFilled={isFilled}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled, { css } from 'styled-components';\nimport { animated } from 'react-spring';\n\ninterface ContainerProps {\n  type?: 'success' | 'info' | 'error';\n  hasDescription: boolean;\n}\n\nconst toastTypeVariation = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `,\n};\n\nexport const Container = styled(animated.div)<ContainerProps>`\n  position: relative;\n  display: flex;\n  width: 360px;\n\n  border-radius: 10px;\n  padding: 16px 30px 16px 16px;\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${props => toastTypeVariation[props.type || 'info']}\n\n  > svg {\n    margin: 4px 12px 0 0;\n  }\n\n  div {\n    flex: 1;\n\n    p {\n      margin-top: 4px;\n      font-size: 14px;\n      opacity: 0.8;\n      line-height: 20px;\n    }\n  }\n\n  button {\n    position: absolute;\n    right: 16px;\n    top: 16px;\n    opacity: 0.6;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n\n  ${props =>\n    !props.hasDescription &&\n    css`\n      align-items: center;\n\n      svg {\n        margin-top: 0;\n      }\n    `}\n`;\n","import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiXCircle,\n  FiCheckCircle,\n  FiInfo,\n} from 'react-icons/fi';\n\nimport { ToastMessage, useToast } from '../../../hooks/toast';\n\nimport { Container } from './styles';\n\ninterface ToastContainerProps {\n  message: ToastMessage;\n  style: object;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={20} />,\n};\n\nconst Toast: React.FC<ToastContainerProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n\n  return (\n    <Container\n      hasDescription={!!message.description}\n      type={message.type}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button type=\"button\" onClick={() => removeToast(message.id)}>\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0px;\n  padding: 30px;\n  overflow: hidden;\n`;\n","import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport { ToastMessage } from '../../hooks/toast';\n\nimport Toast from './Toast';\n\nimport { Container } from './styles';\n\ninterface ToastContainerProps {\n  messages: ToastMessage[];\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    message => message.id,\n    {\n      from: { right: '-120%', opacity: 0 },\n      enter: { right: '0%', opacity: 1 },\n      leave: { right: '-120%', opacity: 0 },\n    },\n  );\n\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast key={key} message={item} style={props} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","import React, { useContext, createContext, useCallback, useState } from 'react';\nimport { v4 } from 'uuid';\n\nimport ToastContainer from '../components/ToastContainer';\n\ninterface ToastContextData {\n  addToast({ title, type, description }: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nexport interface ToastMessage {\n  id: string;\n  type?: 'info' | 'success' | 'error';\n  title: string;\n  description?: string;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ title, type, description }: Omit<ToastMessage, 'id'>) => {\n      const id = v4();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages(state => [...state, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages(state => state.filter(message => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast() {\n  const context = useContext(ToastContext);\n\n  if (!context)\n    throw new Error('useToast must be used within an ToastProvider');\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","import { ValidationError } from 'yup';\n\ninterface Erros {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Erros {\n  const ValidationErrors: Erros = {};\n\n  err.inner.forEach(error => {\n    ValidationErrors[error.path] = error.message;\n  });\n\n  return ValidationErrors;\n}\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport SignInBackgroundImg from '../../assets/sign-in-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  place-content: center;\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimatedContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 50px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      text-decoration: none;\n      display: block;\n      margin-top: 24px;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#F4EDE8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    text-decoration: none;\n    margin-top: 24px;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &:hover {\n      color: ${shade(0.2, '#FF9000')};\n    }\n\n    svg {\n      margin-right: 16px;\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${SignInBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport LogoImg from '../../assets/logo.svg';\nimport { Container, Content, Background, AnimatedContainer } from './styles';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n  const formRef = useRef<FormHandles>(null);\n\n  const history = useHistory();\n\n  const HandleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail é Obrigatório')\n            .email('Digite um E-mail Valido'),\n          password: Yup.string().min(6, 'No minímo 6 digitos'),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        history.push('/dashboard');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Error na Autenticação',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais',\n        });\n      }\n    },\n    [signIn, addToast, history],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimatedContainer>\n          <img src={LogoImg} alt=\"logo-gobarber\" />\n\n          <Form ref={formRef} onSubmit={HandleSubmit}>\n            <h1>Faça seu logon</h1>\n\n            <Input icon={FiMail} name=\"email\" placeholder=\"E-mail\" />\n            <Input\n              icon={FiLock}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Entrar</Button>\n\n            <a href=\"forgout\">Esqueci minha senha</a>\n          </Form>\n\n          <Link to=\"/signup\">\n            <FiLogIn size={16} />\n            Criar conta\n          </Link>\n        </AnimatedContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport SignUpBackground from '../../assets/sign-up-background.png';\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: stretch;\n`;\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  place-content: center;\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimatedContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 50px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      text-decoration: none;\n      display: block;\n      margin-top: 24px;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#F4EDE8')};\n      }\n    }\n  }\n\n  > a {\n    color: #f4ede8;\n    text-decoration: none;\n    margin-top: 24px;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &:hover {\n      color: ${shade(0.2, '#F4EDE8')};\n    }\n\n    svg {\n      margin-right: 16px;\n    }\n  }\n`;\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${SignUpBackground}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiUser, FiMail, FiLock, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport { useToast } from '../../hooks/toast';\n\nimport api from '../../services/api';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport LogoImg from '../../assets/logo.svg';\nimport { Container, Content, Background, AnimatedContainer } from './styles';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const { addToast } = useToast();\n\n  const history = useHistory();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome é Obrigatório'),\n          email: Yup.string()\n            .required('E-mail é obrigatório')\n            .email('Digite um e-mail valido'),\n          password: Yup.string().min(6, 'No minímo 6 digitos'),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        await api.post('/users', data);\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro Realizado!',\n          description:\n            'Cadastro realizado no Gobarber, Você ja pode fazer logon!',\n        });\n\n        history.push('/');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Error na Autenticação',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n\n      <Content>\n        <AnimatedContainer>\n          <img src={LogoImg} alt=\"logo-gobarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Crie sua conta</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              placeholder=\"Senha\"\n              type=\"password\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft size={20} color=\"#F4EDE8\" />\n            Voltar para login\n          </Link>\n        </AnimatedContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\n\nconst Dashboard: React.FC = () => <h1>Dashboard</h1>;\n\nexport default Dashboard;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Route from './Route';\n\nimport SignIn from '../pages/SignIn';\nimport SignUp from '../pages/SignUp';\nimport Dashboard from '../pages/Dashboard';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={SignIn} />\n    <Route path=\"/signup\" component={SignUp} />\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport { AuthProvider } from './auth';\nimport { ToastProvider } from './toast';\n\nconst Hooks: React.FC = ({ children }) => {\n  return (\n    <AuthProvider>\n      <ToastProvider>{children}</ToastProvider>\n    </AuthProvider>\n  );\n};\n\nexport default Hooks;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyles from './styles/global';\n\nimport Routes from './routes';\nimport Hooks from './hooks';\n\nconst App: React.FC = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Hooks>\n      <Routes />\n    </Hooks>\n\n    <GlobalStyles />\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}